%{
#include "y.tab.h"
#include <stdio.h>
#include <string.h>

extern char sentence[1000];  // This will store the user input sentence
extern int choice;
extern char search_word[100];  // This will store the word to be searched
extern char new_word[100];     // This will store the new word to be added
%}

%%

"0"         { return EXIT_PROGRAM; }  // Exit operation
"1"         { return VIEW_SENTENCE; }  // View sentence operation
"2"         { return ADD_NEW_WORD; }   // Add new word operation
"front"     { return FRONT; }          // Option to add new word at the front
"back"      { return BACK; }           // Option to add new word at the back
"3"         { return DELETE_WORD; }	// Option to delete word
"4"         { return SWITCH_WORD; }	// Option to switch searched word with new word
.           { return *yytext; }         // Return any other character as a token

%%

int yywrap() {
    return 1;  // Indicate end of Lex processing
}

int main() {
    // Prompt user to enter a sentence and store it
    printf("Please enter a sentence:\n");
    fgets(sentence, sizeof(sentence), stdin);
    sentence[strcspn(sentence, "\n")] = '\0';  // Remove trailing newline

    // Start the parsing process
    do {
        // Print the options after each operation
        printf("\nSelect an operation:\n");
        printf("0. Exit\n");
        printf("1. View stored sentence\n");
        printf("2. Add a new word\n");
	printf("3. Delete a word\n");
	printf("4. Switch words\n");

        // Begin parsing
        yyparse();  // Call the parser, which will handle the selected option

    } while (choice != 0);  // Continue looping until the user selects 0

    printf("\nExiting program...\n");
    return 0;
}
