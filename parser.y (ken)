%{
#include <stdio.h>
#include <string.h>
#include <stdlib.h>  // Include the necessary header for exit

// Store the story as a single string
char stored[500] = "Yesterday, when I went to the night market, I saw a group of people fighting over a girl! It was unbelievable.";

// Function to display the stored story
void display() {
    printf("\nStored Array:\n");
    printf("%s\n\n", stored);
}

// Function to search for a word in the stored story
void search_word(const char *word) {
    if (strstr(stored, word)) {
        printf("The word '%s' was found in the stored array.\n", word);
    } else {
        printf("The word '%s' was NOT found in the stored array.\n", word);
    }
}

// Function to delete a word from the stored story
void delete_word(const char *word) {
    char *pos = strstr(stored, word);
    if (pos) {
        memmove(pos, pos + strlen(word), strlen(pos + strlen(word)) + 1);
        printf("The word '%s' was removed from the stored array.\n", word);
    } else {
        printf("The word '%s' was NOT found in the stored array.\n", word);
    }
}

// Function to replace a word in the stored story
void replace_word(const char *word, const char *new_word) {
    char temp[500];
    char *pos = strstr(stored, word);
    if (pos) {
        strncpy(temp, stored, pos - stored);
        temp[pos - stored] = '\0';
        strcat(temp, new_word);
        strcat(temp, pos + strlen(word));
        strcpy(stored, temp);
        printf("The word '%s' was replaced with '%s'.\n", word, new_word);
    } else {
        printf("The word '%s' was NOT found in the stored array.\n", word);
    }
}
%}

%token CALL_YACC EXIT_PROGRAM
%token VIEW SEARCH DELETE REPLACE

%%
commands:
    CALL_YACC { printf("Calling Yacc...\n"); }
  | EXIT_PROGRAM { printf("Exiting program...\n"); exit(0); }
  ;

%%

int main() {
    printf("Welcome to the program! Options:\n");
    printf("1 - Call Yacc\n");
    printf("0 - Exit\n");

    while (1) {
        printf("Enter your choice: ");
        yyparse();
    }

    return 0;
}

// Explicitly declare the yyerror function to avoid conflicts
void yyerror(const char *s) {
    fprintf(stderr, "Error: %s\n", s);
}
